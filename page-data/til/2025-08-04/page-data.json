{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/til/2025-08-04/","result":{"data":{"markdownRemark":{"html":"<h2><strong>TIL 4</strong></h2>\n<h3>Domain Purity vs Domain Completeness</h3>\n<p>현재 듣고 있는 부트캠프 동료 분들 대부분이 domain service에 repository 호출을 모두 밀어넣고 있음.</p>\n<p>내가 이해하는 Clean Architecture, DDD와는 많이 다르다고 느꼈음. 왜냐하면 로직의 조립이 이미 도메인 서비스 내에서 다 일어나니까.</p>\n<p>그러면 어플리케이션 서비스가 오히려 얇아진다고 생각했음.</p>\n<p>그런 고민을 하다가 이 아티클을 찾음: <a href=\"https://enterprisecraftsmanship.com/posts/domain-model-purity-completeness/\">Domain model purity vs. domain model completeness (DDD Trilemma)</a></p>\n<p>요약하자면 - 도메인 순수성을 위해 repository 호출은 어플리케이션 계층에서 진행. 나와 유사한 방향성.</p>\n<h3>Layer Dillema</h3>\n<p>I recently split up application layer into many smaller layers for separation of concerns.</p>\n<p>However, as time passed, I realized it also had some trade offs.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>More Layers</th>\n<th>Less Layers</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PROS</td>\n<td>Dependency Tracking, Separation of Concerns</td>\n<td>Less files and boilerplates</td>\n</tr>\n<tr>\n<td>CONS</td>\n<td>Too many files and boilerplates</td>\n<td>Vulnerable to Dependency Issues</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<h2><strong>TIL 9</strong></h2>\n<h3>Circuit Breaker</h3>\n<ul>\n<li>learned about resilience4j and circuit breaker.</li>\n<li>when retry happens too much for certain endpoint, we route it to a completely different handler function.\n<ul>\n<li>example: redis distributed lock seems broken and is blocking qps => circuit break it to use db pessimistic lock instead => more qps handled for some time until devs fix redis</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2><strong>TIL 22</strong></h2>\n<h3>Clean Architecture을 데이터 파이프라인에 써보기</h3>\n<ul>\n<li>\n<p>이틀 동안 clean architecture을 데이터 파이프라인 구축하는 곳(크롤러 kirpris api 수집 도메인)에 만들었는데 나름 쓸만했음. 다만 도메인 객체를 만들기 조금 난감했음.</p>\n</li>\n<li>\n<p>한 번 여기서 리팩토링을 해보자 => 해본 결과 딱 어떻게 변환하는 로직만 도메인에 들어가고 어플리케이션 레이어에서는 그걸 조합만 하는 방식으로 구현됨.</p>\n</li>\n</ul>\n<br/>\n<h2><strong>TIL 23</strong></h2>\n<h3>Long Transactions</h3>\n<ul>\n<li>트랜잭션 길어지면 락 잡고 들어가는 것 보다 커넥션 풀이 더 문제라고함. (둘 다 문제긴한데 커넥션 풀이 더 큰 병목이라고 함.)</li>\n</ul>\n<h3>Blog Licensing</h3>\n<ul>\n<li>다른 사람들이 내 블로그 react 코드 뿐만 아니라 컨텐츠까지 그대로 가져가서 블로그 라이선스 바꿔야함.</li>\n</ul>\n<h3>Data Engineering Frameworkify</h3>\n<ul>\n<li>요즘 데이터 엔지니어링 하면서 드는 보완점 생각들 - 계속 모이면 좋은 데이터 엔지니어링을 할 수 있을듯.</li>\n<li>(프레임워크화 하기 좋은 부분들):\n<ul>\n<li>메타데이터 기록하는게 좋은듯</li>\n<li>표준화는 진짜 제일 중요하다. (앱 개발 안정성을 제로에서 100으로 만듦.)</li>\n<li>LLM 붙는 부분들 어떻게 처리할지 (아예 뒤로 뺴는게 젤 좋아보이긴함)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2><strong>TIL 24</strong></h2>\n<h3>Random thoughts from watching youtube</h3>\n<ul>\n<li>watching no hee young's talk in a podcast =></li>\n<li>watching furiosa's story made me think that I should think my actions as millions of people depend on it.\n<ul>\n<li>if I make rndcircle a super big company, it itself will make korean society a wealthy and superb society.</li>\n<li>every step we make at rndcircle will be a big step of human evolution itself.</li>\n<li>it will greatly reduce the pains of people around the globe.</li>\n<li>me watching stupid contents online for a couple hours is a direct negative influence to millions of South korean people.</li>\n<li>it is</li>\n</ul>\n</li>\n<li>youtube algorithms really can have a great influence on people's minds. even a small tweak can change behaviors of people.</li>\n<li>are we really going to let that happen? why can't we make contents more objective and neutral and harmless?\n<ul>\n<li>also why cant we make our consumption of those videos more proactive?</li>\n<li>there could be a video platform where it is more about productive and objective view of same topics.\n<ul>\n<li>perhaps showing the opposite view of the same topic per video.</li>\n<li>we can charge more since it is more niche.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Rob Moore book review after months of application</h3>\n<ul>\n<li>rob moore's leverage was a real hit.\n<ul>\n<li>short term - paretto thing really worked well. 2:8 rule on everything for leverage</li>\n<li>long term - (knowledge + experience)*(insights + frameworks) yields exponential impact on anything.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"August 04, 2025","slug":"/til/2025-08-04","title":"2025 08 04","subtitle":"Logging what I learned daily"}}},"pageContext":{"id":"1bbf6bee-29d7-5146-b028-8192b56fb684","frontmatter__slug":"/til/2025-08-04","__params":{"frontmatter__slug":"til"}}},"staticQueryHashes":["1865044719","2228436175","326441978"],"slicesMap":{}}